# -*- coding: utf-8 -*-
"""Seaborn-gorjetas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1442r7AE4xNV4iHEiVfbNEMKH3xzNG9W6

# Importando base de dados
"""

import pandas as pd

dados = pd.read_csv('tips.csv')

dados.head()

"""# Tradução"""

dados.columns

renomear = {
    'total_bill' : 'valor_da_conta', 
    'tip' : 'gorjeta', 
    'dessert' : 'sobremesa', 
    'day' : 'dia_da_semana', 
    'time' : 'hora_do_dia', 
    'size' : 'total_de_pessoas'
}

gorjetas = dados.rename(columns = renomear)

gorjetas.head(1)

gorjetas.sobremesa.unique()

sim_nao = {'No' : 'Não', 
           'Yes' : 'Sim'}

gorjetas.sobremesa.map(sim_nao)

gorjetas.head(1)

gorjetas.sobremesa = gorjetas.sobremesa.map(sim_nao)

gorjetas.head(1)

gorjetas.dia_da_semana.unique()

dias = {'Sun' : 'Domingo', 
        'Sat' : 'Sábado', 
        'Thur' : 'Quinta', 
        'Fri' : 'Sexta'}

gorjetas.dia_da_semana = gorjetas.dia_da_semana.map(dias)

gorjetas.head(1)

gorjetas.dia_da_semana.unique()

gorjetas.hora_do_dia.unique()

hora = {'Dinner' : 'Jantar', 
        
        'Lunch' : 'Almoço'}

gorjetas.hora_do_dia = gorjetas.hora_do_dia.map(hora)

gorjetas.head()

"""# Importando o Seaborn"""

!pip install seaborn==0.9.0

import seaborn as sns

"""# Análise 1 - Valor da conta e gorjeta"""

gorjetas.columns

valor_gorjeta = sns.scatterplot(x='valor_da_conta', y='gorjeta', data=gorjetas)

"""**Visualmente, o valor da gorjeta aumenta conforme o valor da conta aumenta.**"""

print(f"A base de dados contém {gorjetas.shape[0]} registros.")
print(f"Registros não nulos: \n{gorjetas.count()}.")

"""## Criando o campo porcentagem"""

gorjetas.head(1)

gorjetas['porcentagem'] = gorjetas['gorjeta'] / gorjetas['valor_da_conta']

gorjetas.head(1)

gorjetas.porcentagem = gorjetas.porcentagem.round(2)

gorjetas.head(3)

porcentagem_conta = sns.scatterplot(x='valor_da_conta', y='porcentagem', data=gorjetas)

"""**Visualmente, o valor da gorjeta não é proporcional ao valor da conta.**"""

porcentagem_conta_linha = sns.relplot(x='valor_da_conta', y='porcentagem', kind='line', data=gorjetas)

sns.lmplot(x='valor_da_conta', y='porcentagem', data=gorjetas)

"""# Análise 2 - Sobremesa"""

gorjetas.head()

gorjetas[gorjetas.sobremesa == 'Sim']

gorjetas[gorjetas.sobremesa == 'Sim'].describe()

gorjetas[gorjetas.sobremesa == 'Não'].describe()

sns.catplot(x='sobremesa', y='gorjeta', data=gorjetas)

sns.relplot(x='valor_da_conta', y='gorjeta', hue='sobremesa', data=gorjetas)

sns.relplot(x='valor_da_conta', y='gorjeta', hue='sobremesa', col='sobremesa', data=gorjetas)

sns.lmplot(x='valor_da_conta', y='gorjeta', col='sobremesa', hue='sobremesa', data=gorjetas)

sns.lmplot(x='valor_da_conta', y='porcentagem', col='sobremesa', hue='sobremesa', data=gorjetas)

"""**Visualmente, existe uma diferença no valor da gorjeta daqueles que pediram sobremesa e daqueles não pediram sobremesa**"""

sns.relplot(x='valor_da_conta', y='gorjeta', col='sobremesa', hue='sobremesa', kind='line', data=gorjetas)

"""# Teste de hipótese

**H<sup>null</sup>**

  **A distribuição da taxa da gorjeta é a mesma nos dois grupos**

**H<sup>alt</sup>**

  **A distribuição da taxa da gorjeta não é a mesma nos dois grupos**
"""

from scipy.stats import ranksums

sobremesa = gorjetas.query("sobremesa == 'Sim'").porcentagem

sem_sobremesa = gorjetas.query("sobremesa == 'Não'").porcentagem

sem_sobremesa

r = ranksums(sobremesa, sem_sobremesa)

print(f"O valor do p-value é: {r.pvalue:.2f}")

"""**H<sup>null</sup>**

**A distribuição da taxa da gorjeta é a mesma nos dois grupos**

#Análise 3 - Dia da semana
"""

gorjetas.dia_da_semana.unique()

sns.catplot(x='dia_da_semana', y='valor_da_conta', data=gorjetas)

sns.relplot(x='valor_da_conta', y='gorjeta', hue='dia_da_semana', data=gorjetas)

sns.relplot(x='valor_da_conta', y='porcentagem', hue='dia_da_semana', data=gorjetas)

sns.relplot(x='valor_da_conta', y='gorjeta', hue='dia_da_semana', col='dia_da_semana', data=gorjetas)

sns.relplot(x='valor_da_conta', y='porcentagem', hue='dia_da_semana', col='dia_da_semana', data=gorjetas)

sns.lmplot(x='valor_da_conta', y='gorjeta', hue='dia_da_semana', col='dia_da_semana', data=gorjetas)

media_geral_gorjetas = gorjetas.gorjeta.mean()

print(f"A média geral das gorjetas é de {media_geral_gorjetas:.2f}")

gorjetas.groupby(['dia_da_semana']).mean()[['valor_da_conta', 'gorjeta', 'porcentagem']]

print("Média de pessoas por dia:")
gorjetas.dia_da_semana.value_counts()

"""## Teste de hipótese

**H<sup>null</sup>**
>**A distribuição do valor da conta é igual no sábado e no domingo**

**H<sup>alt</sup>**
>**A distribuição do valor da conta não é igual no sábado e no domingo**
"""

valor_conta_domingo = gorjetas.query("dia_da_semana == 'Domingo'").valor_da_conta

valor_conta_sabado = gorjetas.query("dia_da_semana == 'Sábado'").valor_da_conta

r2 = ranksums(valor_conta_domingo, valor_conta_sabado)
print(f"O valor do p-value é {r2.pvalue:.2f}")

"""**H<sup>null</sup>**
>**A distribuição do valor da conta é igual no sábado e no domingo**

#Análise 4 - Hora do dia
"""

sns.catplot(x='hora_do_dia', y='valor_da_conta', data=gorjetas)

sns.catplot(x='hora_do_dia', y='valor_da_conta', kind='swarm', data=gorjetas)

sns.violinplot(x='hora_do_dia', y='valor_da_conta', data=gorjetas)

sns.boxplot(x='hora_do_dia', y='valor_da_conta', data=gorjetas)

almoco = gorjetas.query("hora_do_dia == 'Almoço'").valor_da_conta

sns.distplot(almoco)

sns.distplot(almoco, kde=False)

jantar = gorjetas.query("hora_do_dia == 'Jantar'").valor_da_conta

sns.distplot(jantar)

sns.distplot(jantar, kde=False)

gorjetas.groupby(['hora_do_dia']).mean()[['valor_da_conta', 'gorjeta', 'porcentagem']]

"""## Teste de hipótese

**H<sup>null</sup>**
> **A distribuição do valor da conta é igual no jantar e no almoço**

**H<sup>alt</sup>**
> **A distribuição do valor da conta não é igual no jantar e no almoço**
"""

r3 = ranksums(jantar, almoco)
print(f"O valor do p-value é: {r3.pvalue:.4f}")

"""**H<sup>alt</sup>**
> **A distribuição do valor da conta não é igual no jantar e no almoço**

## Teste de hipótese 2

**H<sup>null</sup>**
> **A distribuição da taxa da gorjeta é igual no jantar e no almoço**

**H<sup>alt</sup>**
> **A distribuição da taxa da gorjeta não é igual no jantar e no almoço**
"""

porcentagem_almoco = gorjetas.query("hora_do_dia == 'Almoço'").porcentagem

porcentagem_jantar = gorjetas.query("hora_do_dia == 'Jantar'").porcentagem

r4 = ranksums(porcentagem_almoco, porcentagem_jantar)
print(f"O valor do p-value é: {r4.pvalue:.2f}")

"""**H<sup>null</sup>**
> **A distribuição da taxa da gorjeta é igual no jantar e no almoço**
"""